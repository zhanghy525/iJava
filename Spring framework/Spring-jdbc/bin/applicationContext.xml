<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:component-scan base-package="com.etoak" />

	<!-- 
		xml配置      spring提供的类   数据源  资源文件properties
		注解             业务逻辑  增删查改
	 -->
	 
	 <!-- 
	 	1.数据源
	  -->
	  <bean id="dataSource" 
	        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	  	<!-- 驱动 -->
	  	<property name="driverClassName" 
	  				value="com.mysql.jdbc.Driver"></property>
	  	<!-- 连接 -->
	  	<property name="url" 
	  				value="jdbc:mysql://localhost:3306/et1710"></property>
	  	<!-- 用户名 -->
	  	<property name="username" 
	  	            value="root"></property>
	  	<!-- 密码 -->
	  	<property name="password" 
	  				value="mjylst"></property>
	  </bean>
	  
	  <!-- 
	  	2.使用什么持久层框架？ jdbc
	   -->
	  <bean id="jt" 
	        class="org.springframework.jdbc.core.JdbcTemplate">
	        <!-- 注入数据源 -->
	  		<property name="dataSource" ref="dataSource"></property>
	  </bean>
	  
	  <!-- 实例化业务对象UserDaoImpl -->
	 <!--  <bean id="userDao" 
	  		class="com.etoak.dao.UserDaoImpl">
	  		<property name="jt" ref="jt"></property>
	  </bean> -->
	  
	  <!-- 
	  	3.配置事务管理器
	   -->
	   <bean id="transactionManager" 
	   		 class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	   		<!-- 
	   			注入数据源  交给事务管理器 加入事务
	   			虽然加入事务  但是还没有开始使用
	   		 -->
	   		<property name="dataSource" ref="dataSource"></property>
	   </bean>
	   
	   
	  <!-- 
	  	4.使用事务？ aop  通知 + 切入点
	   --> 
	   
	   <!-- 
	   		事务   环绕通知  
	   		将事务管理交给aop通知使用
	   -->
	   <tx:advice id="tx" transaction-manager="transactionManager">
	   		<tx:attributes>
	   			<!-- 
	   				哪些方法需要加入事务    增删改
	   				事务默认 运行时异常回滚 RuntimeException
	   				
	   				tx:method元素属性
	   				       name表示设置方法名称
	   					   propagation属性传播  7种 
	   					   
	   					   	1.REQUIRED   默认
	   					   	  支持事务，如果事务不存在创建一个新事务，事务存在，就使用当前事务
	   					   	2.SUPPORTS
	   					   	  支持事务，如果事务不存在，以非事务运行     非： 没有
	   					   	3.MANDATORY
	   					   	支持事务，如果事务不存在，抛异常
	   					   	
	   					   	4.REQUIRES_NEW
	   					   	支持事务，事务存在，把事务挂起（关闭），创建一个新事务
	   					   	5.NOT_SUPPORTED
	   					   	以非事务运行，事务存在，挂起事务
	   					    6.NEVER
	   					   	以非事务运行，事务存在，抛异常
	   					   	
	   					   	7.NESTED
	   					   	支持事务 嵌套事务
	   					   	
	   					   	事务a 事务b   全局事务  jta
	   					   	a    b    zookepper  redis 分布式全局事务
	   					   	<tx:jta-transaction-manager />
	   					   	
	   					   	 read-only属性  默认false
	   					   	          true为只读  只能读取数据  一般查询使用
	   					   	
	   					   	 如果使用事务read-only必须为false 不能为true设置只读
	   					   	 propagation="REQUIRED" 
	   					     read-only="false"
	   					   	 
	   					   	 timeout属性 超时  默认-1
	   					   	    -1表示永不超时， 单位秒    60
	   					   	 
	   					   	 rollback-for属性表示遇到什么异常回滚
	   					   	 	默认运行时异常  RuntimeException
	   					   	 no-rollback-for属性表示遇到什么异常不回滚
	   					   	 	no-rollback-for="java.lang.RuntimeException"
	   			 -->
	   			<tx:method name="*add*" 
	   					   propagation="REQUIRED" 
	   					   read-only="false"
	   					   timeout="-1"
	   					   rollback-for="java.lang.Exception"
	   					    />
	   					    
	   			<tx:method name="*save*" />
	   			
	   			<tx:method name="*update*" />
	   			<tx:method name="*delete*" /> 
	   			
	   			<tx:method name="find*" read-only="true" />
	   			<tx:method name="count" read-only="true"/>
	   			<tx:method name="getAll" read-only="true"/>
	   			<tx:method name="selectPage" read-only="true"/>
	   		</tx:attributes>
	   </tx:advice>
	   
	   <aop:config>
	   		<!-- 定义切入点表达式 -->
	   		<aop:pointcut expression="execution(* com.etoak.dao.*.*(..))" 
	   		              id="p"/>
	   		<!-- 连接点   -->
	   		<aop:advisor advice-ref="tx" pointcut-ref="p" />
	   </aop:config>
	   
	 
	  
</beans>